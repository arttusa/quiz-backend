{"version":3,"sources":["components.js","utils.js","app.js","index.js"],"names":["Container","styled","other","Grid","container","Item","item","StyledButton","a","StyledButtonDisabled","StyledPoints","div","StyledQuestion","span","StyledAnswer","StyledScore","Scoreboard","topTen","style","marginTop","xs","display","justifyContent","map","margin","border","name","score","toFixed","ShowScoreboard","scores","setName","setScore","setQuizState","setData","setScores","React","useState","scoreData","setScoreData","useEffect","axios","post","then","res","data","temp","console","log","fetchData","alignItems","height","paddingLeft","paddingRight","onClick","AnswerQuestions","questionsAnswered","setQuestionsAnswered","timeLeft","setTimeLeft","timer","setInterval","clearInterval","flexDirection","width","backgroundColor","borderRadius","marginLeft","paddingTop","paddingBottom","question","answers","correct_answer","AskName","buttonDisabled","setQuestions","get","catch","error","fetchScoreData","temp2","marginBottom","TextField","value","onChange","e","target","App","quizState","questions","Fragment","length","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f7d9928.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, TextField } from '@material-ui/core';\nimport axios from 'axios';\n\nimport styled from 'styled-components';\n\nimport { getQuestions, getTopTen } from './utils';\n\nconst Container = styled(({ ...other }) => <Grid container={true} {...other} />)``;\n\nconst Item = styled(({ ...other }) => <Grid item={true} {...other} />)``;\n\nexport const StyledButton = styled.a`\n\tcolor: #1f4f79;\n\tfont-size: 2.4rem;\n\t&:hover {\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t}\n`;\n\nexport const StyledButtonDisabled = styled.a`\n\tcolor: #9e9e9e;\n\tfont-size: 2.4rem;\n`;\n\nexport const StyledPoints = styled.div`\n\tcolor: #1f4f79;\n\tfont-size: 2.4rem;\n`;\n\nexport const StyledQuestion = styled.span`\n\tfont-size: 3rem;\n\tpadding-right: 3rem;\n\tpadding-left: 3rem;\n`;\n\nexport const StyledAnswer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin: 2rem;\n\t&:hover {\n\t\tcursor: pointer;\n\t\ttransform: scale(1.03);\n\t}\n\tbackground-color: #d1d1d1;\n\twidth: 20vw;\n\theight: 10vh;\n`;\n\nexport const StyledScore = styled.div`\n\tfont-size: 3rem;\n\tcolor: #1f4f79;\n`;\n\nconst Scoreboard = ({ topTen }) => {\n\treturn (\n\t\t<Container style={{ marginTop: '3rem' }}>\n\t\t\t<Item xs={12}>\n\t\t\t\t<Container style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t\t<Item xs={4} style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t\t\tName\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item xs={4} style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t\t\tScore\n\t\t\t\t\t</Item>\n\t\t\t\t</Container>\n\t\t\t</Item>\n\t\t\t{topTen.map((item) => (\n\t\t\t\t<Item xs={12}>\n\t\t\t\t\t<Container style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\txs={4}\n\t\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'center', margin: '0.2rem', border: '1px solid' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.name || '-'}\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\txs={4}\n\t\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'center', margin: '0.2rem', border: '1px solid' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.score.toFixed(2) || '-'}\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t</Container>\n\t\t\t\t</Item>\n\t\t\t))}\n\t\t</Container>\n\t);\n};\n\nexport const ShowScoreboard = ({ scores, name, setName, score, setScore, setQuizState, setData, setScores }) => {\n\tconst [ scoreData, setScoreData ] = React.useState([]);\n\t// Get top 10 on scoreboard\n\tReact.useEffect(\n\t\t() => {\n\t\t\tsetScoreData(scores);\n\t\t\tconst fetchData = async () => {\n\t\t\t\tconst url = 'https://oop-harkka.herokuapp.com/api/addscore';\n\t\t\t\tconst temp = await axios.post(url, { name: name, score: score.toFixed(2) }).then((res) => {\n\t\t\t\t\treturn res.data;\n\t\t\t\t});\n\t\t\t\tconsole.log(temp);\n\t\t\t\tsetScoreData(temp);\n\t\t\t};\n\t\t\tfetchData();\n\t\t},\n\t\t[ name, score, scores ]\n\t);\n\treturn (\n\t\t<Container>\n\t\t\t<Item\n\t\t\t\txs={12}\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\theight: '5vh',\n\t\t\t\t\tmarginTop: '5vh',\n\t\t\t\t\tpaddingLeft: '10rem',\n\t\t\t\t\tpaddingRight: '10rem'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<StyledScore>\n\t\t\t\t\t{`${name}, your score is ${score.toFixed(2)}!`}\n\t\t\t\t\t{score > scores[9].score && ` You made it to top 10!`}\n\t\t\t\t</StyledScore>\n\t\t\t</Item>\n\t\t\t<Item xs={12}>\n\t\t\t\t<Container style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t\t<Item xs={6}>\n\t\t\t\t\t\t<Scoreboard topTen={scoreData} />\n\t\t\t\t\t</Item>\n\t\t\t\t</Container>\n\t\t\t</Item>\n\t\t\t<Item\n\t\t\t\txs={12}\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\theight: '10vh',\n\t\t\t\t\tmarginTop: '10vh'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<StyledButton\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetName('');\n\t\t\t\t\t\tsetQuizState('askName');\n\t\t\t\t\t\tsetScore(0);\n\t\t\t\t\t\tsetData([]);\n\t\t\t\t\t\tsetScores([]);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tTry Again\n\t\t\t\t</StyledButton>\n\t\t\t</Item>\n\t\t</Container>\n\t);\n};\n\nexport const AnswerQuestions = ({ data, setQuizState, questionsAnswered, setQuestionsAnswered, score, setScore }) => {\n\tconst [ timeLeft, setTimeLeft ] = React.useState(10000);\n\t// When 10 questions are answered, switch to scoreboard\n\tReact.useEffect(\n\t\t() => {\n\t\t\tif (questionsAnswered === 10) {\n\t\t\t\tsetQuizState('showScoreboard');\n\t\t\t\tsetQuestionsAnswered(0);\n\t\t\t}\n\t\t},\n\t\t[ questionsAnswered, setQuestionsAnswered, setQuizState ]\n\t);\n\t// timer\n\tReact.useEffect(\n\t\t() => {\n\t\t\tif (timeLeft === 0) {\n\t\t\t\tsetQuestionsAnswered(questionsAnswered + 1);\n\t\t\t\t//getNextQuestion();\n\t\t\t\tsetTimeLeft(10000);\n\t\t\t}\n\t\t\tconst timer = timeLeft > 0 && setInterval(() => setTimeLeft(timeLeft - 10), 10);\n\t\t\treturn () => clearInterval(timer);\n\t\t},\n\t\t[ timeLeft, questionsAnswered, setQuestionsAnswered ]\n\t);\n\treturn (\n\t\t<Container>\n\t\t\t<Item xs={12} style={{ height: '5vh' }}>\n\t\t\t\t<Container style={{ height: '5vh' }}>\n\t\t\t\t\t<Item xs={10} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: `${timeLeft / 10000 * 100}%`,\n\t\t\t\t\t\t\t\tbackgroundColor: '#1f4f79',\n\t\t\t\t\t\t\t\theight: '4vh',\n\t\t\t\t\t\t\t\tborder: '0.5rem',\n\t\t\t\t\t\t\t\tborderRadius: '0.5rem',\n\t\t\t\t\t\t\t\tmarginLeft: '0.5vh'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item xs={2} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t\t\t<StyledPoints>{score.toFixed(2)}</StyledPoints>\n\t\t\t\t\t</Item>\n\t\t\t\t</Container>\n\t\t\t</Item>\n\t\t\t<Item\n\t\t\t\txs={12}\n\t\t\t\tstyle={{ paddingTop: '5rem', paddingBottom: '5rem', display: 'flex', justifyContent: 'center' }}\n\t\t\t>\n\t\t\t\t<StyledQuestion>\n\t\t\t\t\t{data && data[questionsAnswered] && data[questionsAnswered].question ? (\n\t\t\t\t\t\tdata[questionsAnswered].question\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t</StyledQuestion>\n\t\t\t</Item>\n\t\t\t<Item xs={12}>\n\t\t\t\t<Container style={{ display: 'flex', justifyContent: 'space-around' }}>\n\t\t\t\t\t<StyledAnswer\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\tsetQuestionsAnswered(questionsAnswered + 1);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!!data[questionsAnswered].answers[0] &&\n\t\t\t\t\t\t\t\t!!data[questionsAnswered].correct_answer &&\n\t\t\t\t\t\t\t\tdata[questionsAnswered].answers[0] === data[questionsAnswered].correct_answer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetScore(score + timeLeft / 100);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetTimeLeft(10000);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{data && data[questionsAnswered] && data[questionsAnswered].answers[0] ? (\n\t\t\t\t\t\t\tdata[questionsAnswered].answers[0]\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t</StyledAnswer>\n\t\t\t\t\t<StyledAnswer\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetQuestionsAnswered(questionsAnswered + 1);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!!data[questionsAnswered].answers[1] &&\n\t\t\t\t\t\t\t\t!!data[questionsAnswered].correct_answer &&\n\t\t\t\t\t\t\t\tdata[questionsAnswered].answers[1] === data[questionsAnswered].correct_answer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetScore(score + timeLeft / 100);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetTimeLeft(10000);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{data && data[questionsAnswered] && data[questionsAnswered].answers[1] ? (\n\t\t\t\t\t\t\tdata[questionsAnswered].answers[1]\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t</StyledAnswer>\n\t\t\t\t</Container>\n\t\t\t\t<Container style={{ display: 'flex', justifyContent: 'space-around' }}>\n\t\t\t\t\t<StyledAnswer\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetQuestionsAnswered(questionsAnswered + 1);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!!data[questionsAnswered].answers[2] &&\n\t\t\t\t\t\t\t\t!!data[questionsAnswered].correct_answer &&\n\t\t\t\t\t\t\t\tdata[questionsAnswered].answers[2] === data[questionsAnswered].correct_answer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetScore(score + timeLeft / 100);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetTimeLeft(10000);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{data && data[questionsAnswered] && data[questionsAnswered].answers[2] ? (\n\t\t\t\t\t\t\tdata[questionsAnswered].answers[2]\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t</StyledAnswer>\n\t\t\t\t\t<StyledAnswer\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetQuestionsAnswered(questionsAnswered + 1);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!!data[questionsAnswered].answers[3] &&\n\t\t\t\t\t\t\t\t!!data[questionsAnswered].correct_answer &&\n\t\t\t\t\t\t\t\tdata[questionsAnswered].answers[3] === data[questionsAnswered].correct_answer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetScore(score + timeLeft / 100);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetTimeLeft(10000);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{data && data[questionsAnswered] && data[questionsAnswered].answers[3] ? (\n\t\t\t\t\t\t\tdata[questionsAnswered].answers[3]\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t</StyledAnswer>\n\t\t\t\t</Container>\n\t\t\t</Item>\n\t\t</Container>\n\t);\n};\n\nexport const AskName = ({ name, setName, setQuizState, buttonDisabled, setQuestions, setScores }) => {\n\tReact.useEffect(\n\t\t() => {\n\t\t\tconst fetchData = async () => {\n\t\t\t\tconst temp = await getQuestions();\n\t\t\t\tsetQuestions(temp);\n\t\t\t};\n\t\t\tconst fetchScoreData = async () => {\n\t\t\t\tconst temp2 = await getTopTen();\n\t\t\t\tsetScores(temp2);\n\t\t\t};\n\t\t\tfetchData();\n\t\t\tfetchScoreData();\n\t\t},\n\t\t[ setQuestions, setScores ]\n\t);\n\treturn (\n\t\t<Container style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n\t\t\t<Item xs={4} style={{}}>\n\t\t\t\t<Container>\n\t\t\t\t\t<Item xs={12} style={{ display: 'flex', justifyContent: 'left', marginBottom: '0.4rem' }}>\n\t\t\t\t\t\t<TextField value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item\n\t\t\t\t\t\txs={12}\n\t\t\t\t\t\tstyle={{ display: 'flex', justifyContent: 'left', marginTop: '0.4rem', marginBottom: '1rem' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tPlease write your name\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item xs={12} style={{ display: 'flex', justifyContent: 'left', marginTop: '1rem' }}>\n\t\t\t\t\t\t{buttonDisabled ? (\n\t\t\t\t\t\t\t<StyledButtonDisabled>Submit</StyledButtonDisabled>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<StyledButton\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetQuizState('answerQuestions');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</StyledButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t</Container>\n\t\t\t</Item>\n\t\t</Container>\n\t);\n};\n","import axios from 'axios';\n\nexport const getQuestions = () => {\n\tconst url = 'https://oop-harkka.herokuapp.com/api/questions';\n\treturn axios\n\t\t.get(url)\n\t\t.then((res) => {\n\t\t\t//console.log(res.data);\n\t\t\treturn res.data;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\treturn [];\n\t\t});\n};\n\nexport const getTopTen = () => {\n\tconst url = 'https://oop-harkka.herokuapp.com/api/scoreboard';\n\treturn axios.get(url).then((res) => {\n\t\treturn res.data;\n\t});\n};\n\nexport const updateTopTen = ({ obj }) => {\n\tconst url = 'https://oop-harkka.herokuapp.com/api/addscore';\n\tconsole.log(obj);\n\treturn axios.post(url, obj).then((res) => {\n\t\treturn res.data;\n\t});\n};\n\nexport const isCorrectAnswer = ({ data, questionsAnswered, index }) => {\n\tif (!!data[questionsAnswered].answers[index] && !!data[questionsAnswered].correct_answer) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport styled from 'styled-components';\nimport { AnswerQuestions, AskName, ShowScoreboard } from './components';\n\nconst Container = styled(({ ...other }) => <Grid container={true} {...other} />)``;\n\nconst Item = styled(({ ...other }) => <Grid item={true} {...other} />)``;\n\nconst App = () => {\n\t// Possible values are askName, answerQuestions, showScoreboard\n\tconst [ quizState, setQuizState ] = React.useState('askName');\n\tconst [ name, setName ] = React.useState('');\n\tconst [ questionsAnswered, setQuestionsAnswered ] = React.useState(0);\n\tconst [ score, setScore ] = React.useState(0);\n\tconst [ questions, setQuestions ] = React.useState([]);\n\tconst [ scores, setScores ] = React.useState([]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Container\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\theight: '100vh'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Item\n\t\t\t\t\txs={8}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: '#e0dede',\n\t\t\t\t\t\theight: '80vh'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{/**\n           * Render the app itself here: depending on quiz state either name should be asked or questions or scoreboard shown\n           */}\n\t\t\t\t\t{quizState === 'askName' ? (\n\t\t\t\t\t\t<AskName\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\tsetName={setName}\n\t\t\t\t\t\t\tsetQuizState={setQuizState}\n\t\t\t\t\t\t\tbuttonDisabled={questions.length < 10}\n\t\t\t\t\t\t\tsetQuestions={setQuestions}\n\t\t\t\t\t\t\tsetScores={setScores}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : quizState === 'answerQuestions' ? (\n\t\t\t\t\t\t<AnswerQuestions\n\t\t\t\t\t\t\tdata={questions}\n\t\t\t\t\t\t\tsetQuizState={setQuizState}\n\t\t\t\t\t\t\tquestionsAnswered={questionsAnswered}\n\t\t\t\t\t\t\tsetQuestionsAnswered={setQuestionsAnswered}\n\t\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\t\tsetScore={setScore}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : quizState === 'showScoreboard' ? (\n\t\t\t\t\t\t<ShowScoreboard\n\t\t\t\t\t\t\tscores={scores}\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\tsetName={setName}\n\t\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\t\tsetScore={setScore}\n\t\t\t\t\t\t\tsetQuizState={setQuizState}\n\t\t\t\t\t\t\tsetData={setQuestions}\n\t\t\t\t\t\t\tsetScores={setScores}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tundefined\n\t\t\t\t\t)}\n\t\t\t\t</Item>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}